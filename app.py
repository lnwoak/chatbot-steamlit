import streamlit as st
from transformers import AutoTokenizer, AutoModelForSequenceClassification
import torch

# ‡πÇ‡∏´‡∏•‡∏î tokenizer ‡πÅ‡∏•‡∏∞‡πÇ‡∏°‡πÄ‡∏î‡∏•
@st.cache_resource
def load_model():
    tokenizer = AutoTokenizer.from_pretrained("finetuned_wangchanberta_sentiment")
    model = AutoModelForSequenceClassification.from_pretrained("finetuned_wangchanberta_sentiment")
    model.eval()
    return tokenizer, model

tokenizer, model = load_model()

# ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà ID ‚Üí label
id2label = {0: "depressed", 1: "neutral"}

# UI
st.title("üß† ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (Sentiment Detection)")

st.markdown("‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏≤‡∏¢‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡πÄ‡∏ä‡πà‡∏ô:")
st.code("‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏î‡∏µ‡∏°‡∏≤‡∏Å\n‡∏≠‡∏¢‡∏≤‡∏Å‡∏ï‡∏≤‡∏¢\n‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î‡∏Å‡∏±‡∏ö‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï", language="text")

user_input = st.text_area("üìù ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (‡∏´‡∏•‡∏≤‡∏¢‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î)", height=200)

if st.button("üîç ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå"):
    # ‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
    texts = [line.strip() for line in user_input.split('\n') if line.strip() != ""]

    if not texts:
        st.warning("‚ùó ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î")
    else:
        # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° input
        inputs = tokenizer(texts, return_tensors="pt", padding=True, truncation=True)

        # ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
        with torch.no_grad():
            outputs = model(**inputs)
            pred_label_ids = torch.argmax(outputs.logits, dim=1).tolist()

        # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
        st.subheader("üìä ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:")
        for text, label_id in zip(texts, pred_label_ids):
            label = id2label.get(label_id, "unknown")
            st.write(f"‚Ä¢ '{text}' ‚Üí **{label}**")
